[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sh-school"
version = "0.0.1"
description = "Sh School backend and tools"
requires-python = ">=3.11"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
# Limit discovery to the Django backend package to avoid `Multiple top-level packages` errors
include = ["backend*"]
exclude = ["assets*", "DOC*", "backups*", "scripts*", ".*", "tests*"]

[tool.ruff]
target-version = "py311"
# Do not scan virtual environments, build artifacts, or third-party libraries
extend-exclude = [
  ".venv", ".venv_fix", "venv", "env", ".tox", ".eggs", "build", "dist",
  "**/site-packages", "**/__pycache__", "backend/.venv"
]
line-length = 120

[tool.ruff.lint]
# Enable a sensible default rule set; teams can adjust later
select = ["E", "F", "I"]
# Reduce noise from known, acceptable patterns in this codebase.
# - I001: import block not sorted (intentional localized imports, Django patterns)
# - E501: long lines (Arabic text/URLs/docstrings that shouldn't be awkwardly wrapped)
# - E402: module level import not at top (Django command stubs / guarded imports)
# - E713: prefer `not in` (legacy validators kept for backward compatibility)
ignore = ["I001", "E501", "E402", "E713"]

[tool.black]
line-length = 120
skip-string-normalization = true
# Use a literal string to avoid escaping backslashes in the regex
exclude = '(\.venv|\.venv_fix|venv|env|\.tox|site-packages|build|dist|backend\.venv)(?:$|\\)'

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = true
skip = [".venv", ".venv_fix", "venv", "env", ".tox", "site-packages", "build", "dist", "backend/.venv"]

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
warn_unused_configs = true
# Exclude third-party and build directories
exclude = "(\\.venv|\\.venv_fix|venv|env|\\.tox|site-packages|build|dist|backend\\\\.venv)(?:$|\\\\)"
